#!/usr/bin/env python

import getopt
import urllib2
import sys
import json
import ssl
import os

WS_PATH="/v1/certificate"

def usage_and_exit():
    print("Usage: autoca-client [-k <keyfile>] [-c <cerfile>] [-n] <autoca url>")
    print("")
    print("   -k  <keyfile>  : path to key file, default hostkey.pem")
    print("   -c  <certfile> : path to cert file, default hostcert.pen")
    print("   -n             : disable webca host certificate validation")
    print("")
    print("")
    print("   Example:")
    print("")
    print("       $ autoca-client -k myhostkey.pem -c myhostcert.pem -n https://example.invalid/")
    print("")
    sys.exit(1)

def main():
  
  key_file = "hostkey.pem"
  cert_file = "hostcert.pem"
  context = ssl.create_default_context()

  opts, args = getopt.getopt(sys.argv[1:], 'c:k:n')

  if len(args) != 1 :
      usage_and_exit()

  for o, a in opts:
    if o == '-k':
      key_file = a
    elif o == '-c':
      cert_file = a
    elif o == '-n':
      context = ssl._create_unverified_context()
    else:
      usage_and_exit()

  url = args[0] + WS_PATH
  response = urllib2.urlopen(url, context = context).read()
  payload = json.loads(response)

  f = os.open(key_file, os.O_TRUNC|os.O_CREAT|os.O_WRONLY, 0600)
  os.write(f, payload['key'])
  os.close(f)

  f = os.open(cert_file, os.O_TRUNC|os.O_CREAT|os.O_WRONLY, 0600)
  os.write(f, payload['cert'])
  os.close(f)

if __name__ == "__main__":
  main()




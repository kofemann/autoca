#!/usr/bin/env python3

import getopt
import urllib.request
import urllib.parse
import sys
import json
import ssl
import os

WS_PATH="/v1/certificate"

def usage_and_exit():
    print("Usage: autoca-client [-k <keyfile>] [-c <cerfile>] [-o pkcs1|pkcs8] [-n] <autoca url> [common name]")
    print("")
    print("   -k  <keyfile>  : path to key file, default hostkey.pem")
    print("   -c  <certfile> : path to cert file, default hostcert.pem")
    print("   -n             : disable webca host certificate validation")
    print("   -o  <format>   : generate key in pecified form, default pkcs1")
    print("")
    print("")
    print("   Example:")
    print("")
    print("       $ autoca-client -k myhostkey.pem -c myhostcert.pem -n https://example.invalid/")
    print("")
    sys.exit(1)

def main():

  key_file = "hostkey.pem"
  cert_file = "hostcert.pem"
  context = ssl.create_default_context()
  out_form = 'pkcs1'

  opts, args = getopt.getopt(sys.argv[1:], 'c:k:no:')

  if len(args) > 2 or len(args) < 1 :
      usage_and_exit()

  for o, a in opts:
    if o == '-k':
      key_file = a
    elif o == '-c':
      cert_file = a
    elif o == '-n':
      context = ssl._create_unverified_context()
    elif o =='-o':
      out_form = a
    else:
      usage_and_exit()

  opts = {}
  opts['out'] = out_form
  if len(args) == 2:
    opts['cn'] = args[1]

  url = args[0] + WS_PATH + '?' + urllib.parse.urlencode(opts)

  response = urllib.request.urlopen(url, context = context).read()
  payload = json.loads(response)

  f = os.open(key_file, os.O_TRUNC|os.O_CREAT|os.O_WRONLY, 0o600)
  os.write(f, payload['key'].encode('ascii'))
  os.close(f)

  f = os.open(cert_file, os.O_TRUNC|os.O_CREAT|os.O_WRONLY, 0o600)
  os.write(f, payload['cert'].encode('ascii'))
  os.close(f)

if __name__ == "__main__":
  main()
